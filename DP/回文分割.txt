class Solution {
public:
    /**
     * @param s a string
     * @return an integer
     */
    int minCut(string s) {
        int n = s.length();
        if (n == 0) {
            return -1;
        }
        bool isPalin[n][n];
        for (int i = 0; i < n; ++i)
            for (int j = 0; j < n; ++j)
                isPalin[i][j] = false;
        for (int i = 0; i < n; ++i) {
            int j = 0;
            while (i - j >= 0 && i + j < n) {
                if (s[i-j] == s[i+j]) {
                    isPalin[i-j][i+j] = true;
                } else {
                    break;
                }
                ++j;
            }
            j = 0;
            while (i - j >= 0 && (i + 1 + j) < n) {
                if (s[i] == s[i+1] && s[i-j] == s[i+1+j]) {
                    isPalin[i-j][i+1+j] = true;
                } else {
                    break;
                }
                ++j;
            }
        }
        int minpalin[n+1];
        minpalin[0] = 0;
        for (int i = 1; i <= n; ++i) {
            minpalin[i] = i;
            for (int j = 0; j < i; ++j) {
                if (isPalin[j][i-1])
                    minpalin[i] = min(minpalin[i], minpalin[j] + 1);
            }
        }
        return minpalin[n] - 1;
    }
};